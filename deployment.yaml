apiVersion: apps/v1
kind: Deployment
metadata:
  name: read
  labels:
    app: read-deployment
spec:
  selector:
    matchLabels:
      app: read-app
  replicas: # {NUMBER_OF_READ_CONTAINERS}
  template:
    metadata:
      labels:
        app: read-app
    spec:
      containers:
        - name: cognitive-services-read
          image: mcr.microsoft.com/azure-cognitive-services/vision/read
          ports:
            - containerPort: 5000
          env:
            - name: EULA
              value: accept
            - name: billing
              value: # {ENDPOINT_URI}
            - name: apikey
              value: # {API_KEY}
            - name: Queue__RabbitMQ__HostName
              value: # {RABBITMQ_HOSTNAME}
            - name: Queue__RabbitMQ__VirtualHost
              value: # {RABBITMQ_VIRTUALHOST, default: '/'}
            - name: Queue__RabbitMQ__Username
              value: # {RABBITMQ_USERNAME, default: 'guest'}
            - name: Queue__RabbitMQ__Password
              value: # {RABBITMQ_PASSWORD, default: 'guest'}
            - name: Queue__RabbitMQ__Port
              value: # {RABBITMQ_PORT, default: "5672"}

          volumeMounts:
            - name: read-data
              mountPath: /share
              readOnly: false

          livenessProbe:
            httpGet:
              path: /ContainerLiveness
              port: 5000
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 20

      volumes:
      - name: read-data
        persistentVolumeClaim:
          claimName: read-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: azure-cognitive-service-read
spec:
  type: LoadBalancer
  ports:
    - port: 5000
      targetPort: 5000
  selector:
    app: read-app

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: read-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: azurefile
  resources:
    requests:
      storage: 5Gi
